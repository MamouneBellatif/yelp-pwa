{"version":3,"sources":["services/YelpService.js","components/Search.js","components/Result.js","components/RestaurantDetails.js","services/WorkerGet.js","services/WorkerService.js","components/comments.js","App.js"],"names":["YelpService","get","_get","_asyncToGenerator","url","params","fetch","proxyurl","method","headers","Authorization","accept","accessControlAllowOrigin","withCredentials","json","_x","_x2","apply","arguments","styles","StyleSheet","create","container","flex","justifyContent","paddingHorizontal","input","height","borderColor","borderWidth","marginBottom","paddingLeft","SearchScreen","_ref","navigation","_useState","useState","_useState2","_slicedToArray","restaurant","setRestaurant","_useState3","_useState4","location","setLocation","_useState5","_useState6","setErreur","handleSearch","_ref2","console","log","response","term","navigate","results","data","businesses","error","Toast","show","type","position","text1","visibilityTime","autoHide","topOffset","bottomOffset","_jsxs","View","style","children","_jsx","TextInput","value","onChangeText","placeholder","Button","title","onPress","backgroundColor","restaurantContainer","flexDirection","marginHorizontal","marginVertical","borderRadius","image","width","restaurantInfo","marginLeft","name","fontWeight","ResultsScreen","route","FlatList","renderItem","item","TouchableOpacity","restaurantId","id","Image","source","uri","image_url","Text","price","categories","map","cat","join","address1","keyExtractor","padding","restaurantDetails","restaurantName","fontSize","reviewsContainer","reviewsTitle","review","borderBottomWidth","borderBottomColor","paddingBottom","reviewUser","reviewRating","fontStyle","RestaurantDetailsScreen","reviews","setReviews","useEffect","fetchRestaurantDetails","fetchRestaurantReviews","_ref3","ScrollView","display_phone","rating","review_count","index","user","text","WorkerServiceGet","axios","baseURL","proxyUrl","heading","commentContainer","username","content","marginTop","button","color","CommentComponent","comments","setComments","comment","setComment","then","length","slice","handleSubmit","body","JSON","stringify","concat","_toConsumableArray","shift","catch","k","v","Stack","createStackNavigator","App","NavigationContainer","Navigator","initialRouteName","Screen","component","options","ref","setRef"],"mappings":"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","file":"static/js/app.fa5473e0.chunk.js","sourcesContent":["import axios from 'axios';\nconst proxyurl = \"https://purple-art-1f04.bellatif6169.workers.dev/\";\nconst apiKey =\n  'p2lseXmq5yarrSoE6PGD8hsXxBwmJV5U1dbV8FodsK26NFwKY3YcurmXSJi-3R9RhtiLpJRZbOi90665i5a_UZxA3RzsIu1gGnaYH24JzcSwoTrsp7_0Y_0xYYMhZHYx';\nconst baseUrl = 'https://api.yelp.com/v3/businesses';\n\n// const YelpService = axios.create({\n//   baseURL:  proxyurl + baseUrl,\n//   headers: {\n//     Authorization: `Bearer ${apiKey}`,\n//     withCredentials: true,\n//     cache: 'no-cache',\n//     },\n// });\n\n//translating the axios instance to fetch\nconst YelpService = {\n      get: async (url, params) => {\n\n        const response = await fetch(proxyurl + baseUrl , {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${apiKey}`,\n            accept: 'application/json',\n            'Content-Type': 'application/json',\n            accessControlAllowOrigin: '*',\n            'Access-Control-Allow-Credentials': true,\n            withCredentials: true,\n          },\n        });\n        return response.json();\n\n    }\n\n}\n// YelpService.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n// YelpService.defaults.headers.common['Accept'] = 'application/json';\n\nexport default YelpService;\n\n\n// export default YelpService;\n","// screens/SearchScreen.js\nimport React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\nimport YelpService from \"../services/YelpService\";\nimport Toast from 'react-native-toast-message';\n\n\nconst SearchScreen = ({ navigation }) => {\n  const [restaurant, setRestaurant] = useState('');\n  const [location, setLocation] = useState('');\n  const [erreur, setErreur] = useState(false);\n  const handleSearch = async () => {\n    console.log(\"resto\", restaurant);\n    try {\n      const response = await YelpService.get('/search', {\n        params: {\n          term: restaurant,\n          location: location,\n        },\n      });\n\n\n\n      navigation.navigate('Results', { results: response.data.businesses });\n    } catch (error) {\n      setErreur(true);\n        Toast.show({\n        type: 'error',\n        position: 'bottom',\n        text1: 'Aucun résultat, veuillez réesseyer    ',\n        visibilityTime: 4000,\n        autoHide: true,\n        topOffset: 30,\n        bottomOffset: 40,\n      });\n      console.error('Error fetching data from Yelp API:', error);\n    }\n  };\n\n\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        value={restaurant}\n        onChangeText={setRestaurant}\n        placeholder=\"Nom du restaurant\"\n      />\n      <TextInput\n        style={styles.input}\n        value={location}\n        onChangeText={setLocation}\n        placeholder=\"Ville ou code postal\"\n      />\n      <Button title=\"Valider\" onPress={handleSearch} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n  },\n  input: {\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    paddingLeft: 10,\n  },\n});\n\nexport default SearchScreen;\n","// screens/ResultsScreen.js\nimport React from 'react';\nimport { View, Text, StyleSheet, FlatList, Image,TouchableOpacity  } from 'react-native';\nconst ResultsScreen = ({ route, navigation }) => {\n  const { results } = route.params;\n\n const renderItem = ({ item: restaurant }) => (\n       <TouchableOpacity onPress={() => navigation.navigate('RestaurantDetails', { restaurantId: restaurant.id })}>\n\n    <View style={styles.restaurantContainer}>\n      <Image style={styles.image} source={{ uri: restaurant.image_url }} />\n      <View style={styles.restaurantInfo}>\n        <Text style={styles.name}>{restaurant.name}</Text>\n        <Text>{restaurant.price}</Text>\n        <Text>{restaurant.categories.map((cat) => cat.title).join(', ')}</Text>\n        <Text>{restaurant.location.address1}</Text>\n      </View>\n    </View>\n      \n        </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.container}>\n      <FlatList\n        data={results}\n        renderItem={renderItem}\n        keyExtractor={(restaurant) => restaurant.id}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  restaurantContainer: {\n    flexDirection: 'row',\n    marginHorizontal: 10,\n    marginVertical: 5,\n    backgroundColor: '#f5f5f5',\n    borderRadius: 5,\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 5,\n  },\n  restaurantInfo: {\n    marginLeft: 10,\n    justifyContent: 'space-around',\n    flex: 1,\n  },\n  name: {\n    fontWeight: 'bold',\n  },\n});\n\nexport default ResultsScreen;\n","// screens/RestaurantDetailsScreen.js\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Image } from 'react-native';\nimport YelpService from '../services/YelpService';\n\nconst RestaurantDetailsScreen = ({ route }) => {\n  const { restaurantId } = route.params;\n\n  const [restaurant, setRestaurant] = useState(null);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchRestaurantDetails = async () => {\n      try {\n        const response = await YelpService.get(`/${restaurantId}`);\n        setRestaurant(response.data);\n      } catch (error) {\n        console.error('Error fetching restaurant details:', error);\n      }\n    };\n\n    const fetchRestaurantReviews = async () => {\n      try {\n        const response = await YelpService.get(`/${restaurantId}/reviews`);\n        setReviews(response.data.reviews);\n      } catch (error) {\n        console.error('Error fetching restaurant reviews:', error);\n      }\n    };\n\n    fetchRestaurantDetails();\n    fetchRestaurantReviews();\n  }, [restaurantId]);\n\n  if (!restaurant) {\n    return <Text>Loading...</Text>;\n  }\n\nreturn (\n<ScrollView style={styles.container}>\n      <Image style={styles.image} source={{ uri: restaurant.image_url }} />\n      <View style={styles.restaurantDetails}>\n        <Text style={styles.restaurantName}>{restaurant.name}</Text>\n        <Text>{restaurant.price} - {restaurant.categories.map((cat) => cat.title).join(', ')}</Text>\n        <Text>{restaurant.location.address1}</Text>\n        <Text>Telephone: {restaurant.display_phone}</Text>\n        <Text>Note: {restaurant.rating} ({restaurant.review_count} avis)</Text>\n      </View>\n      <View style={styles.reviewsContainer}>\n        <Text style={styles.reviewsTitle}>Avis:</Text>\n        {reviews.map((review, index) => (\n          <View key={index} style={styles.review}>\n            <Text style={styles.reviewUser}>{review.user.name}:</Text>\n            <Text>{review.text}</Text>\n            <Text style={styles.reviewRating}>Rating: {review.rating}</Text>\n          </View>\n        ))}\n      </View>\n    </ScrollView>\n);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 10,\n  },\n  image: {\n    width: '100%',\n    height: 200,\n    marginBottom: 15,\n  },\n  restaurantDetails: {\n    marginBottom: 20,\n  },\n  restaurantName: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  reviewsContainer: {},\n  reviewsTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  review: {\n    marginBottom: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc',\n    paddingBottom: 10,\n  },\n  reviewUser: {\n    fontWeight: 'bold',\n  },\n  reviewRating: {\n    fontStyle: 'italic',\n  },\n});\n\nexport default RestaurantDetailsScreen;\n","//create a new axios instance with the baseURL of the proxyurl + cloudflare worker url in comments.js\n//\n// Compare this snippet from services/WorkerService.js:\nimport axios from 'axios';\n\nconst proxyurl = \"https://purple-art-1f04.bellatif6169.workers.dev/\";\n//const proxyurl = \"\";\nconst baseUrl = 'https://api-livre.bellatif6169.workers.dev';\n\n//fetch instead of axios\n\nconst WorkerServiceGet = axios.create({\n\n    baseURL:  baseUrl,\n    \n    headers: {\n        'Content-Type': '*/*'\n    },\n});\n\nexport default WorkerServiceGet;","//create a new axios instance with the baseURL of the proxyurl + cloudflare worker url in comments.js\n//\n// Compare this snippet from services/WorkerService.js:\nimport axios from 'axios';\n\nconst proxyUrl = \"https://purple-art-1f04.bellatif6169.workers.dev/\";\n//const proxyurl = \"\";\nconst baseUrl = 'https://api-livre.bellatif6169.workers.dev';\n\n//fetch instead of axio\n\nconst WorkerServicePost = axios.create({\n\n    baseURL:  proxyUrl + baseUrl,\n    headers: {\n        'Content-Type': 'application/json',\n        'Referrer-Policy': 'strict-origin-when-cross-origin',\n        'Cross-Origin-Embedder-Policy': 'require-corp; report-to=\"default\";',\n        'Cross-Origin-Opener-Policy': 'same-site; report-to=\"default\";',\n        'Cross-Origin-Resource-Policy': 'same-site',\n        'X-Content-Type-Options': 'nosniff',\n        \n    },\n\n\n});\n\n/*\nadd headers  security headers  \"X-Content-Type-Options\": \"nosniff\",\n      \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\n      \"Cross-Origin-Embedder-Policy\": 'require-corp; report-to=\"default\";',\n      \"Cross-Origin-Opener-Policy\": 'same-site; report-to=\"default\";',\n      \"Cross-Origin-Resource-Policy\": \"same-site\",\n*/\n\n\n\n\nexport default WorkerServicePost;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport axios from 'axios';\nimport WorkerServicePost from '../services/WorkerService';\nimport WorkerServiceGet from '../services/WorkerGet';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nconst CommentComponent = () => {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState('');\n    const commentWorker = 'https://api-livre.bellatif6169.workers.dev/comments';\n    const fetchComments = () => {\n      const response = WorkerServiceGet.get('/comments').then((response) => {\n                    console.log(response.data);\n                    setComments(response.data);\n                });\n    }\n    useEffect(() =>{\n\n        //use workerservice.js to fetch comments with axios\n\n       \n                const response = WorkerServiceGet.get('/comments').then((response) => {\n                    console.log(response.data);\n                    // get max 10 comments\n                    if (response.data.length > 5) {\n                        response.data = response.data.slice(response.data.length - 5, response.data.length);\n                    }\n                    setComments(response.data);\n                });\n\n\n\n    }, []);\n\n    const handleSubmit = async  () => {\n\n    fetch('https://api-livre.bellatif6169.workers.dev/comments', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n            'Referrer-Policy': 'strict-origin-when-cross-origin',\n            'Cross-Origin-Embedder-Policy': 'require-corp; report-to=\"default\";',\n            'Cross-Origin-Opener-Policy': 'same-site; report-to=\"default\";',\n            'Cross-Origin-Resource-Policy': 'same-site',\n            'X-Content-Type-Options': 'nosniff',\n\n        },\n        body: JSON.stringify({\n            content: comment\n        })\n    }).then((response) => {\n\n        setComments([...comments, comment]);\n        //limit the number of comments to 5\n        if (comments.length > 5) {\n            comments.shift();\n        }\n        setComment('');\n    }).catch((error) => {\n        console.error('Error fetching data from Cloudflare Workers API:', error);\n    });}\n    \n\n//iterate on comments array and display them in a list (the format is id: \"comment\")\n\n\n        return ( \n            <View style={styles.container}>\n            <Text style={styles.heading}>Livre d'or</Text>\n            <ScrollView style={styles.container}>\n            <FlatList\n                data={comments}\n                keyExtractor={(k,v) => v}\n                renderItem={({item}) => {\n                    return <View style={styles.item} >\n                    <Text>anonyme: {item}</Text>\n                    </View>\n                }}\n            />\n            </ScrollView>\n            <Text style={styles.heading}>Add a comment</Text>\n            <View style={styles.container}>\n                    <TextInput\n                        style={styles.input}\n                        placeholder=\"Enter your comment\"\n                        value={comment}\n                        onChangeText={setComment} />\n                    <Button style={styles.button} title=\"Submit\" onPress={handleSubmit} />\n                </View>\n                </View>\n        );\n    };\n\n\n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n            padding: 20,\n            backgroundColor: '#fff'\n        },\n        heading: {\n            fontSize: 24,\n            fontWeight: 'bold',\n            marginBottom: 20\n        },\n        commentContainer: {\n            marginBottom: 10,\n            borderWidth: 1,\n            borderColor: '#ccc',\n            padding: 10\n        },\n        username: {\n            fontWeight: 'bold'\n        },\n        content: {\n            marginTop: 5\n        },\n        input: {\n            borderWidth: 1,\n            borderColor: '#ccc',\n            padding: 10,\n            marginBottom: 10\n        },\n        button: {\n            backgroundColor: 'blue',\n            color: '#fff',\n            padding: 10\n        },\n        item: {\n            backgroundColor: 'lightgray',\n            padding: 6,\n            marginVertical: 2,\n            marginHorizontal: 16,\n            borderRadius: 4,\n        }\n    });\n    export default CommentComponent;\n","// App.js\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport SearchScreen from './components/Search';\nimport ResultsScreen from './components/Result';\nimport RestaurantDetailsScreen from './components/RestaurantDetails'\nimport Toast from 'react-native-toast-message';\nimport CommentComponent from './components/comments';\n\nconst Stack = createStackNavigator();\n\nconst App = () => {\n  return (\n    <NavigationContainer>\n    <CommentComponent />\n      <Stack.Navigator initialRouteName=\"Search\">\n        <Stack.Screen name=\"Search\" component={SearchScreen} options={{ title: 'Recherche' }} />\n        <Stack.Screen name=\"Results\" component={ResultsScreen} options={{ title: 'Résultats' }} />\n        <Stack.Screen\n        name=\"RestaurantDetails\"\n        component={RestaurantDetailsScreen}\n        options={{ title: \"Détails du restaurant\"}}\n        />\n      </Stack.Navigator>\n      <Toast ref={(ref) => Toast.setRef(ref)} />\n    </NavigationContainer>\n  );\n};\n\n\n\nexport default App;\n"],"sourceRoot":""}